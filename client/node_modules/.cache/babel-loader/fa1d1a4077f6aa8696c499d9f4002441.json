{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\DevConnector\\\\client\\\\src\\\\components\\\\Pages\\\\CommentBox.js\";\nimport React, { Component } from 'react';\nimport './CommentBox.css';\n\nclass CommentBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showComments: false,\n      comments: [{\n        id: 1,\n        author: \"landiggity\",\n        body: \"Thank you for the information.\"\n      }, {\n        id: 2,\n        author: \"scarlett-jo\",\n        body: \"That's a mighty fine comment you've got there my good looking fellow...\"\n      }, {\n        id: 3,\n        author: \"rosco\",\n        body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"\n      }]\n    };\n  }\n\n  render() {\n    const comments = this._getComments();\n\n    let commentNodes;\n    let buttonText = 'Show Comments';\n\n    if (this.state.showComments) {\n      buttonText = 'Hide Comments';\n      commentNodes = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-list\",\n        children: comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 28\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comment Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        addComment: this._addComment.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"comment-reveal\",\n        onClick: this._handleClick.bind(this),\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"comment-count\",\n        children: this._getCommentsTitle(comments.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), commentNodes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  } // end render\n\n\n  _addComment(author, body) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author,\n      body\n    };\n    this.setState({\n      comments: this.state.comments.concat([comment])\n    }); // *new array references help React stay fast, so concat works better than push here.\n  }\n\n  _handleClick() {\n    this.setState({\n      showComments: !this.state.showComments\n    });\n  }\n\n  _getComments() {\n    return this.state.comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        author: comment.author,\n        body: comment.body\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  _getCommentsTitle(commentCount) {\n    if (commentCount === 0) {\n      return 'No comments yet';\n    } else if (commentCount === 1) {\n      return \"1 comment\";\n    } else {\n      return `${commentCount} comments`;\n    }\n  }\n\n} // end CommentBox component\n\n\nclass CommentForm extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"comment-form\",\n      onSubmit: this._handleSubmit.bind(this),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-form-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Name\",\n          required: true,\n          ref: input => this._author = input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 102\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Comment\",\n          rows: \"4\",\n          required: true,\n          ref: textarea => this._body = textarea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  } // end render\n\n\n  _handleSubmit(event) {\n    event.preventDefault(); // prevents page from reloading on submit\n\n    let author = this._author;\n    let body = this._body;\n    this.props.addComment(author.value, body.value);\n  }\n\n} // end CommentForm component\n\n\nclass Comment extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-header\",\n        children: this.props.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-body\",\n        children: [\"- \", this.props.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n  _deleteComment() {\n    alert(\"-- DELETE Comment Functionality COMMING SOON...\");\n  }\n\n}\n\nexport default CommentBox;","map":{"version":3,"sources":["C:/Users/User/Desktop/DevConnector/client/src/components/Pages/CommentBox.js"],"names":["React","Component","CommentBox","constructor","state","showComments","comments","id","author","body","render","_getComments","commentNodes","buttonText","_addComment","bind","_handleClick","_getCommentsTitle","length","comment","setState","concat","map","commentCount","CommentForm","_handleSubmit","input","_author","textarea","_body","event","preventDefault","props","addComment","value","Comment","_deleteComment","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './CommentBox.css';\r\n\r\nclass CommentBox extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showComments: false,\r\n            comments: [\r\n                { id: 1, author: \"landiggity\", body: \"Thank you for the information.\" },\r\n                { id: 2, author: \"scarlett-jo\", body: \"That's a mighty fine comment you've got there my good looking fellow...\" },\r\n                { id: 3, author: \"rosco\", body: \"What is the meaning of all of this 'React' mumbo-jumbo?\" }\r\n            ]\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const comments = this._getComments();\r\n        let commentNodes;\r\n        let buttonText = 'Show Comments';\r\n\r\n        if (this.state.showComments) {\r\n            buttonText = 'Hide Comments';\r\n            commentNodes = <div className=\"comment-list\">{comments}</div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"comment-box\">\r\n                <h2>Comment Section</h2>\r\n                <CommentForm addComment={this._addComment.bind(this)} />\r\n                <button id=\"comment-reveal\" onClick={this._handleClick.bind(this)}>\r\n                    {buttonText}\r\n                </button>\r\n                <h3>Comments</h3>\r\n                <h4 className=\"comment-count\">\r\n                    {this._getCommentsTitle(comments.length)}\r\n                </h4>\r\n                {commentNodes}\r\n            </div>\r\n        );\r\n    } // end render\r\n\r\n    _addComment(author, body) {\r\n        const comment = {\r\n            id: this.state.comments.length + 1,\r\n            author,\r\n            body\r\n        };\r\n        this.setState({ comments: this.state.comments.concat([comment]) }); // *new array references help React stay fast, so concat works better than push here.\r\n    }\r\n\r\n    _handleClick() {\r\n        this.setState({\r\n            showComments: !this.state.showComments\r\n        });\r\n    }\r\n\r\n    _getComments() {\r\n        return this.state.comments.map((comment) => {\r\n            return (\r\n                <Comment\r\n                    author={comment.author}\r\n                    body={comment.body}\r\n                    key={comment.id} />\r\n            );\r\n        });\r\n    }\r\n\r\n    _getCommentsTitle(commentCount) {\r\n        if (commentCount === 0) {\r\n            return 'No comments yet';\r\n        } else if (commentCount === 1) {\r\n            return \"1 comment\";\r\n        } else {\r\n            return `${commentCount} comments`;\r\n        }\r\n    }\r\n} // end CommentBox component\r\n\r\nclass CommentForm extends React.Component {\r\n    render() {\r\n        return (\r\n            <form className=\"comment-form\" onSubmit={this._handleSubmit.bind(this)}>\r\n                <div className=\"comment-form-fields\">\r\n                    <input placeholder=\"Name\" required ref={(input) => this._author = input}></input><br />\r\n                    <textarea placeholder=\"Comment\" rows=\"4\" required ref={(textarea) => this._body = textarea}></textarea>\r\n                </div>\r\n                <div className=\"comment-form-actions\">\r\n                    <button type=\"submit\">Post Comment</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    } // end render\r\n\r\n    _handleSubmit(event) {\r\n        event.preventDefault();   // prevents page from reloading on submit\r\n        let author = this._author;\r\n        let body = this._body;\r\n        this.props.addComment(author.value, body.value);\r\n    }\r\n} // end CommentForm component\r\n\r\nclass Comment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"comment\">\r\n                <p className=\"comment-header\">{this.props.author}</p>\r\n                <p className=\"comment-body\">- {this.props.body}</p>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    _deleteComment() {\r\n        alert(\"-- DELETE Comment Functionality COMMING SOON...\");\r\n    }\r\n}\r\n\r\nexport default CommentBox"]},"metadata":{},"sourceType":"module"}