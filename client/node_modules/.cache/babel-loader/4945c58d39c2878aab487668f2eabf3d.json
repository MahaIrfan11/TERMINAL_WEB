{"ast":null,"code":"/*import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    }, [getGithubRepos]);\r\n\r\n    return (\r\n        <div className='profile-github'>\r\n            <h2 className='text-primary my-1'>Github Repos</h2>\r\n            {repos === null ? (\r\n                <Spinner />\r\n            ) : (\r\n                    repos.map(repo => (\r\n                        <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n                            <div>\r\n                                <h4>\r\n                                    <a\r\n                                        href={repo.html_url}\r\n                                        target='_blank'\r\n                                        rel='noopener noreferrer'\r\n                                    >\r\n                                        {repo.name}\r\n                                    </a>\r\n                                </h4>\r\n                                <p>{repo.description}</p>\r\n                            </div>\r\n                            <div>\r\n                                <ul>\r\n                                    <li className='badge badge-primary'>\r\n                                        Stars: {repo.stargazers_count}\r\n                                    </li>\r\n                                    <li className='badge badge-dark'>\r\n                                        Watchers: {repo.watchers_count}\r\n                                    </li>\r\n                                    <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getGithubRepos }\r\n)(ProfileGithub);\r\n*/","map":{"version":3,"sources":["C:/Users/User/Desktop/DevConnector/client/src/components/profile/ProfileGithub.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    }, [getGithubRepos]);\r\n\r\n    return (\r\n        <div className='profile-github'>\r\n            <h2 className='text-primary my-1'>Github Repos</h2>\r\n            {repos === null ? (\r\n                <Spinner />\r\n            ) : (\r\n                    repos.map(repo => (\r\n                        <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n                            <div>\r\n                                <h4>\r\n                                    <a\r\n                                        href={repo.html_url}\r\n                                        target='_blank'\r\n                                        rel='noopener noreferrer'\r\n                                    >\r\n                                        {repo.name}\r\n                                    </a>\r\n                                </h4>\r\n                                <p>{repo.description}</p>\r\n                            </div>\r\n                            <div>\r\n                                <ul>\r\n                                    <li className='badge badge-primary'>\r\n                                        Stars: {repo.stargazers_count}\r\n                                    </li>\r\n                                    <li className='badge badge-dark'>\r\n                                        Watchers: {repo.watchers_count}\r\n                                    </li>\r\n                                    <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getGithubRepos }\r\n)(ProfileGithub);\r\n*/"]},"metadata":{},"sourceType":"module"}