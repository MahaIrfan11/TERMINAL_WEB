{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\DevConnector\\\\client\\\\src\\\\components\\\\Pages\\\\CommentContainer.js\";\nimport React, { Component } from 'react';\nimport './CommentBox.css';\n\nclass CommentContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      commentBoxes: [],\n      commentBoxId: 0\n    };\n  }\n\n  addNewCommentBox() {\n    let newCommentBoxId = this.state.commentBoxId + 1;\n    this.setState({\n      commentBoxId: newCommentBoxId\n    });\n\n    let commentBox = /*#__PURE__*/_jsxDEV(CommentBox, {}, this.state.commentBoxId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 26\n    }, this);\n\n    this.setState({\n      commentBoxes: this.state.commentBoxes.concat(commentBox)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxesSpace\",\n        children: this.state.commentBoxes.map(function (commentBox) {\n          return commentBox;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addNewCommentBox.bind(this),\n          children: \"Add new commentbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass CommentBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      commentId: 0\n    };\n  }\n\n  handleOnSubmit(commentText) {\n    let newCommentId = this.state.commentId + 1;\n    this.setState({\n      commentId: newCommentId\n    });\n    let comment = {\n      id: this.state.commentId,\n      author: 'me',\n      text: commentText\n    };\n    this.setState({\n      comments: this.state.comments.concat(comment)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CommentBox\",\n      children: [/*#__PURE__*/_jsxDEV(CommentList, {\n        comments: this.state.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CommentInput, {\n        onCommentSubmit: this.handleOnSubmit.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass CommentInput extends Component {\n  handleOnSubmit(e) {\n    let commentText = this.textInput.value;\n\n    if (commentText) {\n      this.props.onCommentSubmit(commentText);\n      this.textInput.value = '';\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CommentInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref => this.textInput = ref,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleOnSubmit.bind(this),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass CommentList extends Component {\n  render() {\n    let liComments = this.props.comments.map(function (comment) {\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        author: comment.author,\n        text: comment.text\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"CommentList\",\n      children: liComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Comment extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"Comment\",\n      children: [this.props.author, \": \", this.props.text]\n    }, this.props.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CommentContainer;","map":{"version":3,"sources":["C:/Users/User/Desktop/DevConnector/client/src/components/Pages/CommentContainer.js"],"names":["React","Component","CommentContainer","constructor","state","commentBoxes","commentBoxId","addNewCommentBox","newCommentBoxId","setState","commentBox","concat","render","map","bind","CommentBox","props","comments","commentId","handleOnSubmit","commentText","newCommentId","comment","id","author","text","CommentInput","e","textInput","value","onCommentSubmit","ref","CommentList","liComments","Comment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './CommentBox.css';\r\n\r\nclass CommentContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            commentBoxes: [],\r\n            commentBoxId: 0\r\n        };\r\n    }\r\n    addNewCommentBox() {\r\n        let newCommentBoxId = this.state.commentBoxId + 1;\r\n        this.setState({ commentBoxId: newCommentBoxId });\r\n\r\n        let commentBox = <CommentBox key={this.state.commentBoxId} />\r\n        this.setState({ commentBoxes: this.state.commentBoxes.concat(commentBox) });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"boxesSpace\">\r\n                    {this.state.commentBoxes.map(function (commentBox) {\r\n                        return commentBox;\r\n                    })}\r\n                </div>\r\n                <div className=\"buttonBar\">\r\n                    <button onClick={this.addNewCommentBox.bind(this)}>Add new commentbox</button>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CommentBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: [],\r\n            commentId: 0\r\n        };\r\n    }\r\n    handleOnSubmit(commentText) {\r\n        let newCommentId = this.state.commentId + 1;\r\n        this.setState({ commentId: newCommentId });\r\n\r\n        let comment = { id: this.state.commentId, author: 'me', text: commentText }\r\n        this.setState({ comments: this.state.comments.concat(comment) });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"CommentBox\">\r\n                <CommentList comments={this.state.comments} />\r\n                <CommentInput onCommentSubmit={this.handleOnSubmit.bind(this)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass CommentInput extends Component {\r\n\r\n    handleOnSubmit(e) {\r\n        let commentText = this.textInput.value;\r\n        if (commentText) {\r\n            this.props.onCommentSubmit(commentText);\r\n            this.textInput.value = '';\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"CommentInput\">\r\n                <input ref={(ref) => this.textInput = ref} type=\"text\"></input>\r\n                <button onClick={this.handleOnSubmit.bind(this)}>Send</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CommentList extends Component {\r\n    render() {\r\n        let liComments = this.props.comments.map(function (comment) {\r\n            return <Comment key={comment.id} author={comment.author} text={comment.text} />;\r\n        })\r\n        return (\r\n            <ul className=\"CommentList\">\r\n                {liComments}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nclass Comment extends Component {\r\n    render() {\r\n        return (\r\n            <li key={this.props.id} className=\"Comment\">\r\n                {this.props.author}: {this.props.text}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentContainer"]},"metadata":{},"sourceType":"module"}